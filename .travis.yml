sudo: required
language: node_js
node_js:
- '8'
git:
  depth: 1
services:
- docker
install:
- npm install
- npm run lint
- sudo apt-get update
- sudo apt-get -y install jq
- cd config
- cp config.json.example config.json
script:
# domain tests with memory db
- jq '.DB="memory"' config.json > tmp.json && mv tmp.json config.json
- jq '.TESTS_DB=["memory"]' config.json > tmp.json && mv tmp.json config.json
- cd ../domain && yarn install --modules-folder ../node_modules && npm test

- docker-compose up -d dev
- docker-compose up -d mongo-server

# db tests of domain for mongo db
- cd ../config && jq '.TESTS_DB=["mongo"]' config.json > tmp.json && mv tmp.json config.json
- docker-compose exec dev bash -c "cd domain && npm run test:db"

- docker-compose exec dev bash -c "cd frontend && yarn install --modules-folder ../node_modules && npm run build"
- docker-compose exec -d dev bash -c "cd backend && yarn install --modules-folder ../node_modules && npm start"
- docker-compose up -d selenium
- docker-compose exec dev bash -c "cd e2e && yarn install --modules-folder ../node_modules && npm start"

env:
  global:
  - secure: MGrWTC6JY7JMDsx0Y6aWPxTBmgQVsHSu+SifNf06Bs7BT+lBUtYlbt5Sy1xGOGSH3HtXL+eqFAdVEv5GaScTnh4D5vh4Mk9hsAe963oVlicErstI/2LD8j5iMM3oDh/C9Z/yIE3mh9YmbIuCmsQ6nxPinT3F9Nc7VRmfxT2y7oCjkysTn1u1QgCGYNDl652tunWumkjsx1+WXDzSAX4LDJtk+up5MAUl+9mELrBAELRE7rvpAfl1okZHY4worMIwPrdHUKcKt2/LwYZICqV23TyUrhj+qZU0dgwc2VeJJNYdbmMq0AxQAt2/S3HeEsgNoziv7FWVeIHJI2q76Hw5MvDqb26Mv6WXibboGv/i5oAkOA3gybEGkTRIgPVI/Thtj4EjKsQI+7q3T2w74G2WTIkBRO/EZZ1WM+XvB62MxgrYws9/JhsYpW8BZa1TqdOkoC695YmmGhBkXqGfpvkT6KUmLexh+UgGPESolhgk9xpFJ3zqKcFpU2R1p/zhyQKd4sOT+9a38KpS+yt6XszTp5cQsoIMcTnCMWgua78WoQI5dIJD46nD53taFI59L+B6ZUbVZPD+ngwqzyG5kAY/chek7iPCSOXW3NL5Ln1Fbr/to3G/cHYzL7Y7Qqq8hpE2C3QZK5bWKZ2LJ2wS7cQLSerc81i6l5VShHEw7rqkZdo=
  - secure: ZWm9T6p75QrU/aKelRmnvQ1aOQ544tIRO5PwggsFm+EDl5gaDdCaEylwyBZOcmqe2bd6BrjJURGKH53Y9r1u69lCbZvnpynhM96BA4EkCosWPvhaSrgput9Vmucbbtlc33QYXyc0OqZ1QbpCjIPo8iPWhCYWVYUPVsX0Ot0KGRuBUWob57eprDQ8stkL9BRmkiXJ1nMfvXh/aRXL34eS0jbxQkUJ4TMrw15hMlbu/4BLPhE0bhVFWUrAf6gXZwf3LBAOfFA7ZbfXyYoWJYsLwGnFDo12FtqhuLgE7+hOtxkVDdhi8E9hiJEYCBCzWVW9qCfLFFUw1uvEvYg/B2J6ot43okKdwyM/IlHzQqqn98hndZJAx40iTgx3tmuB/MwyuY72qKa1Q+NzWkKSiCR/8aou84xP67jb0h7uOBC/INYio99jGOCbmpk3pAeWbRdGKNCkxnKAVC3x38AFpEg2aXWEDvKs+fxr3W8cE2rTPzsG2WnazjpX6ArNdDT02/2kuEeUe72Sw86u86DE6cS/iDAfzrBsZzrGZeFi3rcMj8EpNYfofUmknkO/gl42i1IYmycH5SGw+3Q5T1jFTN1AdhsK72xsqZfozZC1qH+hytmea5q6wYfl0guqoMriTIxGioEG42vXSrQT9RuzNC4QA9iIOM0ZnM/+SUzaD7Phy4s=

notifications:
  slack:
    secure: Wc2toiBwtrFzlcq1dfu7e+WDP5MbTL9IJTJcYGTVdwP5vjV4CsFSycPV6djGVwT7b6QxT0YzmYYGEfW5iSMRna+4Hftw88SVZyjBrH1Fv2mLpGYDenN3PDt8jus45/OMMdP2Tw6wd76/2sg9D19nlcroLbz6Krhr7sHMYShPWOXRWymrAp4zkaKZx5jdtO4IpPkigA2d/qZUVQtPl2oJvonyE8zbHnJaakXWeDalYt2rnzKYavNuDLq0hcV+EUBfIKWdnjNM7X7Be8zpApeoNMqj4TzRKTvI9DLh05i2xWfuvMsXI2ooECaWVslvZUUqxE/7EFzrHrIlgKsuZrw4b934Le+aXQWGGcdfOZm+4R5GxeddQ+yTk+yPDZ+jgmv+u/H4c0YIfZzHZ+++y6cGKCix72QpkpsAOYPUG4W54rQm6Qp85cwxlQX/VxAQncEgLGpuaVRys2LKFSgthz3XDGM4iCEhx9VRLqlINMSrX0KffUtUz3UWQhJHT1lGUQs92EVWlca95TbibXXd5jrIwrfMtFb47N09MkXuQvTJOMfdnGnsBAtx+MLZY0vBJGoQY10KjP7bsnsZl3jOvswRQq3cu1l2F2uupyKAabo4m8hHP/2q5Ck716pE/SRyYl2vKaWlz74d0Bjtclwx4Xtq7ae/i+Di/AchiHpthFonYdo=
#branches:
#  only:
#  - master
deploy:
  skip_cleanup: true
  provider: script
  script: cd ../ && chmod +x scripts/deploy.sh && scripts/deploy.sh
  on:
#    branch: master
    all_branches: true
